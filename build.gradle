import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'com.vanniktech.maven.publish' version '0.29.0'
}

group = 'eu.koboo'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'org.jsoup:jsoup:1.17.2'

    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    options.fork = true
    options.encoding = 'UTF-8'
    options.release.set(11)
}

tasks.register('sourcesJar', Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}
tasks.register('javadocJar', Jar) {
    from javadoc.destinationDir
    archiveClassifier.set('javadoc')
}

artifacts {
    archives shadowJar
    archives sourcesJar
    archives javadocJar
}

mavenPublishing {
    coordinates(project.group.toString(), "${project.name}", project.version.toString())

    pom {
        name = 'fritzbox-rest-api'
        description = 'REST api for your fritzbox'
        inceptionYear = '2022'
        url = 'https://github.com/Koboo/fritzbox-rest-api'
        licenses {
            license {
                name = 'The Apache License, Version 2.0'
                url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }
        developers {
            developer {
                id = 'koboo'
                name = 'Koboo'
                email = 'admin@koboo.eu'
                url = 'https://github.com/Koboo/'
            }
        }
        scm {
            url = 'https://github.com/Koboo/fritzbox-rest-api'
            connection = 'scm:git:https://github.com/Koboo/fritzbox-rest-api'
            developerConnection = 'scm:git:https://github.com/Koboo/fritzbox-rest-api'
        }
    }

    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)
    signAllPublications()
}